plugins {
	id 'org.springframework.boot' version '2.3.3.RELEASE'
	id 'io.spring.dependency-management' version '1.0.10.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
	id 'war'
}

apply plugin: 'project-report'

group = 'com.lhdt'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// gradle build -Pprofile=product (develop, test, local)
final String DEFAULT_PROFILE = 'local'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation project(':common')

	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.3'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.amqp:spring-rabbit-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'org.springframework.security:spring-security-test'
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
	ignoreFailures = true
	//exclude '**/*'
}

asciidoctor {
	attributes 'snippets': snippetsDir
	inputs.dir snippetsDir
	dependsOn test
}

task copyDocument(type: Copy) {
	println " @@@@@ copyDocument execute @@@@@ "
	dependsOn asciidoctor
	from file("build/asciidoc/html5/")
	into file("src/main/resources/static/docs")
}

build {
	dependsOn copyDocument
}

task wrapper(type: Wrapper) {
	gradleVersion = '6.5'
}
