<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="lhdt.persistence.UrbanGroupMapper">

	<!-- 도시 그룹 목록 조회 -->
	<select id="getListUrbanGroup" resultType="urbanGroup">
		/* getListUrbanGroup */
		WITH RECURSIVE urban_group_tree (
			urban_group_id, urban_group_name, user_id, ancestor, parent, depth, view_order, children, basic, available,
			start_date, end_date, viewStartDate, viewEndDate,
			location, area, receiving_population, receiving_household, project_operator, transfer_local_government,
			description, insert_date, path, cycle
		) AS (
		SELECT A.urban_group_id, A.urban_group_name, A.user_id, A.ancestor, A.parent, A.depth, A.view_order, A.children, A.basic, A.available,
			A.start_date, A.end_date, TO_CHAR(A.start_date, 'YYYY-MM-DD') AS viewStartDate, TO_CHAR(A.end_date, 'YYYY-MM-DD') AS viewEndDate,
			A.location, A.area, A.receiving_population, A.receiving_household, A.project_operator, A.transfer_local_government,
			A.description, A.insert_date, ARRAY[A.view_order], false
		FROM urban_group A
		WHERE A.parent = 0
		<if test="available != null">
			AND A.available = #{available}
		</if>
		UNION ALL
		SELECT A.urban_group_id, A.urban_group_name, A.user_id, A.ancestor, A.parent, A.depth, A.view_order, A.children, A.basic, A.available,
			A.start_date, A.end_date, TO_CHAR(A.start_date, 'YYYY-MM-DD') AS viewStartDate, TO_CHAR(A.end_date, 'YYYY-MM-DD') AS viewEndDate,
		 	A.location, A.area, A.receiving_population, A.receiving_household, A.project_operator, A.transfer_local_government,
			A.description, A.insert_date, path || A.view_order, A.urban_group_id = ANY(path)
		FROM urban_group A, urban_group_tree B
		WHERE A.parent = B.urban_group_id AND not cycle
		)
		SELECT urban_group_id, urban_group_name, user_id, ancestor, parent, depth, view_order, children, basic, available,
			start_date, end_date, viewStartDate, viewEndDate,
			location, area, receiving_population, receiving_household, project_operator, transfer_local_government,
			description, insert_date, path
		FROM urban_group_tree
		ORDER BY path
	</select>

	<!-- 도시 그룹 정보 -->
	<select id="getUrbanGroup" parameterType="int" resultType="urbanGroup">
		/* getUrbanGroup */
		SELECT A.*,
			CASE
				WHEN parent > 0 THEN ( SELECT urban_group_name FROM urban_group WHERE urban_group_id = A.parent )
				ELSE null
			END AS parentName
		FROM urban_group A
		WHERE urban_group_id = #{urbanGroupId}
	</select>

	<select id="getListUrbanGroupByDepth" parameterType="int" resultType="urbanGroup">
		SELECT *
		FROM urban_group
		WHERE depth = #{depth}
		ORDER BY view_order
	</select>

	<select id="getListUrbanGroupByParent" parameterType="int" resultType="urbanGroup">
		SELECT * FROM urban_group WHERE parent = #{urbanGroupId}
	</select>
</mapper>