<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="lhdt.persistence.DataLibraryMapper">

	<!-- 데이터 라이브러리 총 건수 -->
	<select id="getDataLibraryTotalCount" parameterType="dataLibrary" resultType="long">
		/* getDataLibraryTotalCount */
		SELECT COUNT(data_library_id)
		FROM data_library A
        LEFT JOIN data_library_group B
        ON A.data_library_group_id = B.data_library_group_id
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="dataLibraryGroupId != null and dataLibraryGroupId > 0">
			AND A.data_library_group_id = #{dataLibraryGroupId}
			</if>
			<if test="dataType != null and dataType != ''">
			AND data_type = #{dataType}
			</if>
			<if test="userId != null and userId != ''">
			AND A.user_id = #{userId}
			</if>
			<if test="status != null and status != ''">
			AND status = #{status}
			</if>
			<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '0'.toString()">
			AND ${searchWord} = #{searchValue}
			</if>
			<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '1'.toString()">
			AND ${searchWord} LIKE '%' || #{searchValue} || '%'
			</if>
			<if test="startDate != null and startDate != ''">
			<![CDATA[
			AND A.insert_date >= TO_TIMESTAMP(#{startDate}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
			<if test="endDate != null and endDate != ''">
			<![CDATA[
			AND A.insert_date <= TO_TIMESTAMP(#{endDate}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
		</trim>
	</select>

	<!-- 데이터 라이브러리 목록 -->
	<select id="getListDataLibrary" parameterType="dataLibrary" resultType="dataLibrary">
		/* getListDataLibrary */
		SELECT A.*, B.data_library_group_name
		FROM data_library A
		LEFT JOIN data_library_group B
		ON A.data_library_group_id = B.data_library_group_id
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="dataLibraryGroupId != null and dataLibraryGroupId > 0">
			AND A.data_library_group_id = #{dataLibraryGroupId}
			</if>
			<if test="dataType != null and dataType != ''">
			AND A.data_type = #{dataType}
			</if>
			<if test="userId != null and userId != ''">
			AND A.user_id = #{userId}
			</if>
			<if test="status != null and status != ''">
			AND A.status = #{status}
			</if>
			<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '0'.toString()">
			AND ${searchWord} = #{searchValue}
			</if>
			<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '1'.toString()">
			AND ${searchWord} LIKE '%' || #{searchValue} || '%'
			</if>
			<if test="startDate != null and startDate != ''">
			<![CDATA[
			AND A.insert_date >= TO_TIMESTAMP(#{startDate}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
			<if test="endDate != null and endDate != ''">
			<![CDATA[
			AND A.insert_date <= TO_TIMESTAMP(#{endDate}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
		</trim>
		<choose>
		<when test="orderWord != null and orderWord != '' and orderValue != null and orderValue != ''">
		ORDER BY ${orderWord} ${orderValue}
		</when>
		<otherwise>
		ORDER BY A.insert_date DESC, A.data_library_id DESC
		</otherwise>
		</choose>
		OFFSET #{offset} LIMIT #{limit}
	</select>
	
	<!-- 데이터 라이브러리 목록 -->
	<select id="getListAllDataLibraryByDataLibraryGroupId" parameterType="int" resultType="dataLibrary">
		/* getListAllDataLibraryByDataLibraryGroupId */
		SELECT A.*, B.data_library_group_name
		FROM data_library A LEFT JOIN data_library_group B
        	ON A.data_library_group_id = B.data_library_group_id
		WHERE A.data_library_group_id = #{dataLibraryGroupId}
		ORDER BY A.insert_date DESC, A.data_library_id DESC
	</select>

	<!-- 데이터 라이브러리 정보 -->
	<select id="getDataLibrary" parameterType="dataLibrary" resultType="dataLibrary">
		/* getDataLibrary */
		SELECT A.*, B.data_library_group_name, B.data_library_group_target, B.data_library_group_key
		FROM data_library A, data_library_group B
		WHERE data_library_id = #{dataLibraryId}
			AND A.data_library_group_id = B.data_library_group_id
			<if test="userId != null and userId != ''">
			AND A.user_id = #{userId}
			</if>
	</select>

	<!-- 데이터 라이브러리 정보 -->
	<select id="getDataLibraryByDataLibraryKey" parameterType="dataLibrary" resultType="dataLibrary">
		/* getDataLibraryByDataLibraryKey */
		SELECT *
		FROM data_library
		WHERE data_library_group_id = #{dataLibraryGroupId}
			AND data_library_key = #{dataLibraryKey}
			<if test="userId != null and userId != ''">
			AND user_id = #{userId}
			</if>
	</select>

	<!-- 최상위 root 데이터 라이브러리 정보 취득 -->
	<select id="getRootDataLibraryByDataLibraryGroupId" parameterType="int" resultType="dataLibrary">
		/* getRootDataLibraryByDataLibraryGroupId */
		SELECT *
		FROM data_library
		WHERE data_library_group_id = #{dataLibraryGroupId} 
			AND parent = 0
			AND depth = 1
	</select>

	<!-- 데이터 라이브러리 아이디 중복 체크 -->
	<select id="getDuplicationKeyCount" parameterType="dataLibrary" resultType="int">
		/* getDuplicationKeyCount */
		SELECT COUNT(data_library_key) AS count
		FROM data_library
		WHERE data_library_group_id = #{dataLibraryGroupId}
			AND data_library_key = #{dataLibraryKey}
	</select>

	<!-- 데이터 라이브러리 등록 -->
	<insert id="insertDataLibrary" useGeneratedKeys="true" keyProperty="dataLibraryId" parameterType="dataLibrary">
		/* insertDataLibrary */
		<selectKey keyProperty="dataLibraryId" resultType="long" order="BEFORE">
    		SELECT NEXTVAL('data_library_seq')
  		</selectKey>
		INSERT INTO data_library(
			data_library_id, data_library_group_id, converter_job_id, data_library_key, data_library_name, data_type, user_id,
			status, description
		) VALUES (
			#{dataLibraryId}, #{dataLibraryGroupId}, #{converterJobId}, #{dataLibraryKey}, #{dataLibraryName}, #{dataType}, #{userId},
			#{status}, #{description}
		)
	</insert>
	
	<!-- 데이터 라이브러리 수정 -->
	<update id="updateDataLibrary" parameterType="dataLibrary">
		/* updateDataLibrary */
		UPDATE data_library
		SET
			<if test="dataLibraryGroupId != null and dataLibraryGroupId > 0">
			data_library_group_id = #{dataLibraryGroupId},
			</if>
			<if test="converterJobId != null and converterJobId > 0">
			converter_job_id = #{converterJobId},
			</if>
			<if test="dataLibraryName != null and dataLibraryName != ''">
			data_library_name = #{dataLibraryName},
			</if>
			<if test="dataType != null and dataType != ''">
			data_type = #{dataType},
			</if>
			<if test="status != null and status != ''">
			status = #{status},
			</if>
			<if test="description != null and description != ''">
			description = #{description},
			</if>
			update_date = now()
		WHERE data_library_id = #{dataLibraryId}
			<if test="userId != null and userId != ''">
			AND user_id = #{userId}
			</if>
	</update>

	<!-- 데이터 라이브러리 상태 수정 -->
	<update id="updateDataLibraryStatus" parameterType="dataLibrary">
		/* updateDataLibraryStatus */
		UPDATE data_library
		SET status = #{status}
			update_date = NOW()
		WHERE data_library_id = #{dataLibraryId}
			<if test="userId != null and userId != ''">
			AND user_id = #{userId}
			</if>
	</update>

	<!-- 데이터 라이브러리 삭제 -->
	<delete id="deleteDataLibrary" parameterType="dataLibrary">
		/* deleteDataLibrary */
		DELETE
		FROM data_library
		WHERE data_library_id = #{dataLibraryId}
			<if test="userId != null and userId != ''">
			AND user_id = #{userId}
			</if>
	</delete>

	<!-- 데이터 라이브러리 그룹 고유번호를 이용한 삭제 -->
	<delete id="deleteDataLibraryByDataLibraryGroupId" parameterType="dataLibraryGroup">
		/* deleteDataLibraryByDataLibraryGroupId */
		DELETE
		FROM data_library
		WHERE data_library_group_id = #{dataLibraryGroupId}
			<if test="userId != null and userId != ''">
			AND user_id = #{userId}
			</if>
	</delete>
	
	<!-- converterJob 정보를 이용하여 데이터 라이브러리 삭제 -->
	<delete id="deleteDataLibraryByConverterJob" parameterType="dataLibrary">
		/* deleteDataLibraryByConverterJob */
		DELETE
		FROM data_library 
		WHERE converter_job_id = #{converterJobId}
			<if test="userId != null and userId != ''">
			AND user_id = #{userId}
			</if>
			<if test="dataLibraryId != null and dataLibraryId != ''">
			AND data_library_id = #{dataLibraryId}
			</if>
	</delete>

	<!-- 사용자 아이디를 이용한 데이터 라이브러리 삭제 -->
	<delete id="deleteDataLibraryByUserId" parameterType="string">
		/* deleteDataLibraryByUserId */
		DELETE
		FROM data_library
		WHERE user_id = #{value}
	</delete>
</mapper>