<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="lhdt.persistence.NewTownMapper">

    <!-- NewTown 총 건수 -->
    <select id="getNewTownTotalCount" parameterType="newTown" resultType="long">
        /* getNewTownTotalCount */
        SELECT COUNT(new_town_id)
        FROM new_town a
        LEFT JOIN new_town_group b
        ON a.new_town_group_id = b.new_town_group_id
		<trim prefix="WHERE" prefixOverrides="AND">
			<if test="newTownGroupId != null and newTownGroupId gt 0">
			AND a.new_town_group_id = #{newTownGroupId}
			</if>
			<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '0'.toString()">
			AND ${searchWord} = #{searchValue}
			</if>
			<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '1'.toString()">
			AND ${searchWord} LIKE '%' || #{searchValue} || '%'
			</if>
			<if test="startDate != null and startDate != ''">
			<![CDATA[
			AND a.insert_date >= TO_TIMESTAMP(#{startDate}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
			<if test="endDate != null and endDate != ''">
			<![CDATA[
			AND a.insert_date <= TO_TIMESTAMP(#{endDate}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
		</trim>
    </select>

    <!-- NewTown 목록 -->
    <select id="getListNewTown" parameterType="newTown" resultType="newTown">
        /* getListNewTown */
        SELECT a.*, b.new_town_group_name
        FROM new_town a
        LEFT JOIN new_town_group b
        ON a.new_town_group_id = b.new_town_group_id
		<trim prefix="WHERE" prefixOverrides="AND">
        	<if test="newTownGroupId != null and newTownGroupId gt 0">
			AND a.new_town_group_id = #{newTownGroupId}
			</if>
			<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '0'.toString()">
			AND ${searchWord} = #{searchValue}
			</if>
			<if test="searchWord != null and searchWord != '' and searchValue != null and searchValue != '' and searchOption == '1'.toString()">
			AND ${searchWord} LIKE '%' || #{searchValue} || '%'
			</if>
			<if test="startDate != null and startDate != ''">
			<![CDATA[
			AND a.insert_date >= TO_TIMESTAMP(#{startDate}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
			<if test="endDate != null and endDate != ''">
			<![CDATA[
			AND a.insert_date <= TO_TIMESTAMP(#{endDate}, 'YYYYMMDDHH24MISSUS')
			]]>
			</if>
		</trim>
		<choose>
		<when test="orderWord != null and orderWord != '' and orderValue != null and orderValue != ''">
		ORDER BY a.${orderWord} ${orderValue}
		</when>
		<otherwise>
		ORDER BY a.insert_date DESC, new_town_id DESC
		</otherwise>
		</choose>
		OFFSET #{offset} LIMIT #{limit}
    </select>

    <!-- 뉴타운 정보 취득 -->
    <select id="getNewTown" parameterType="int" resultType="newTown">
        /* getNewTown */
        SELECT A.*, B.new_town_group_name
        FROM new_town A LEFT JOIN new_town_group B
        	ON B.new_town_group_id = A.new_town_group_id
        WHERE A.new_town_id = #{newTownId}
    </select>
    
	<!-- 뉴타운 등록 -->
    <insert id="insertNewTown" parameterType="newTown">
		/* insertNewTown */
        <selectKey keyProperty="newTownId" resultType="int" order="BEFORE">
            SELECT NEXTVAL('new_town_seq')
        </selectKey>
        INSERT INTO layer (
            new_town_id, new_town_group_id, new_town_name, user_id,
			business_period, development_area, population, self_sufficient_area, house_number, job_creation
		) VALUES (
			#{newTownId}, #{newTownGroupId}, #{newTownName}, #{userId},
			#{businessPeriod}, #{developmentArea}, #{population}, #{selfSufficientArea}, #{houseNumber}, #{jobCreation}
        )
    </insert>

    <!-- 뉴타운 정보 수정 -->
    <update id="updateNewTown" parameterType="newTown">
        /* updateNewTown */
        UPDATE new_town SET
			new_town_name = #{newTownName},
	        new_town_group_id = #{newTownGroupId},
		<if test="businessPeriod != null and businessPeriod != ''">
	        business_period = #{businessPeriod},
	    </if>
		<if test="developmentArea != null and developmentArea gt 0">
	        development_area = #{developmentArea},
		</if>
		<if test="population != null and population gt 0">
	        population = #{population},
		</if>
		<if test="selfSufficientArea != null and selfSufficientArea gt 0">
	        self_sufficient_area = #{selfSufficientArea},
		</if>
		<if test="houseNumber != null and houseNumber gt 0">
	        house_number = #{houseNumber},
		</if>
		<if test="jobCreation != null and jobCreation gt 0">
	        job_creation = #{jobCreation},
		</if>
			user_id = #{userId}
        WHERE new_town_id = #{newTownId}
    </update>

    <!-- 뉴타운 삭제 -->
    <delete id="deleteNewTown" parameterType="int">
        /* deleteNewTown */
        DELETE FROM new_town WHERE new_town_id = #{newTownId}
    </delete>
</mapper>